services:
  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - carvane-network
  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - carvane-network

  poli_db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: poli_db
    volumes:
      - poli_db_data:/var/lib/postgresql/data
    networks:
      - carvane-network
  restaurant_dashboard:
    build:
      context: ./restaurant_dashboard
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.restaurant-dashboard.rule=Host(`restaurant-dashboard.carvane.localhost`)"
      - "traefik.http.routers.restaurant-dashboard.entrypoints=web"
      - "traefik.http.services.restaurant-dashboard.loadbalancer.server.port=3000"
    depends_on:
      - traefik
    networks:
      - carvane-network
  poli_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`carvane.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - traefik
    networks:
      - carvane-network

  poli_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - DB_HOST=poli_db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=poli_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.carvane.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    depends_on:
      - traefik
      - poli_db
    networks:
      - carvane-network

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.carvane.localhost`)"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.carvane.localhost`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    depends_on:
      - traefik
    networks:
      - carvane-network

volumes:
  mongo_data:
  poli_db_data:
  minio_data:

networks:
  carvane-network:
    driver: bridge