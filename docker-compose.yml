services:
  # Init container to setup hosts file
  setup-hosts:
    build:
      context: .
      dockerfile: Dockerfile.init
    volumes:
      - /etc/hosts:/etc/hosts:rw
    privileged: true
    restart: "no"

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - carvane-network
    depends_on:
      - setup-hosts

  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - carvane-network
    depends_on:
      - setup-hosts

  poli_db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: poli_db
    volumes:
      - poli_db_data:/var/lib/postgresql/data
    networks:
      - carvane-network
    depends_on:
      - setup-hosts

  restaurant_dashboard:
    build:
      context: ./restaurant_dashboard
      dockerfile: Dockerfile
    environment:
      - PNPM_SKIP_CONFIRMATIONS=true
      - CI=true
      - PNPM_FETCH_RETRIES=5
      - PNPM_FETCH_RETRY_FACTOR=3
      - PNPM_FETCH_RETRY_MINTIMEOUT=20000
      - PNPM_NETWORK_CONCURRENCY=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.restaurant-dashboard.rule=Host(`restaurant-dashboard.carvane.localhost`)"
      - "traefik.http.routers.restaurant-dashboard.entrypoints=web"
      - "traefik.http.services.restaurant-dashboard.loadbalancer.server.port=3000"
    depends_on:
      - traefik
      - setup-hosts
    volumes:
      - ./restaurant_dashboard:/app
      - restaurant_next:/app/.next
    command: sh -lc "pnpm dev --port 3000 --hostname 0.0.0.0"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - carvane-network

  poli_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`carvane.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      - traefik
      - setup-hosts
    networks:
      - carvane-network

  poli_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - DB_HOST=poli_db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=poli_db
      - JWT_SECRET_KEY=your-secret-key-here-change-in-production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.carvane.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    depends_on:
      - traefik
      - poli_db
      - setup-hosts
    networks:
      - carvane-network

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.carvane.localhost`)"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.carvane.localhost`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    depends_on:
      - traefik
      - setup-hosts
    networks:
      - carvane-network

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"  # Qdrant API
      - "6334:6334"  # Qdrant Web UI
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qdrant.rule=Host(`qdrant.carvane.localhost`)"
      - "traefik.http.routers.qdrant.entrypoints=web"
      - "traefik.http.services.qdrant.loadbalancer.server.port=6333"
      - "traefik.http.routers.qdrant-ui.rule=Host(`qdrant-ui.carvane.localhost`)"
      - "traefik.http.routers.qdrant-ui.entrypoints=web"
      - "traefik.http.services.qdrant-ui.loadbalancer.server.port=6334"
    depends_on:
      - traefik
      - setup-hosts
    networks:
      - carvane-network

  aibackend:
    build:
      context: ./aibackend
      dockerfile: Dockerfile
    environment:
      - MONGODB_URL=mongodb://root:example@mongodb:27017
      - MONGODB_DATABASE=carvane_ai
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CHARGILY_API_KEY=${CHARGILY_API_KEY:-}
      - CHARGILY_SECRET_KEY=${CHARGILY_SECRET_KEY:-}
      - CHARGILY_BASE_URL=https://pay.chargily.com/test/v2
      - CHARGILY_WEBHOOK_SECRET=${CHARGILY_WEBHOOK_SECRET:-}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aibackend.rule=Host(`ai.carvane.localhost`)"
      - "traefik.http.routers.aibackend.entrypoints=web"
      - "traefik.http.services.aibackend.loadbalancer.server.port=8001"
    depends_on:
      - traefik
      - mongodb
      - minio
      - qdrant
      - setup-hosts
    networks:
      - carvane-network

volumes:
  mongo_data:
  poli_db_data:
  minio_data:
  qdrant_data:
  frontend_node_modules:
  frontend_next:
  restaurant_next:

networks:
  carvane-network:
    driver: bridge